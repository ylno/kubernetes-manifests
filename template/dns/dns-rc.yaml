apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    app: dns
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    version: v11
  name: kube-dns-v11
  namespace: kube-system
spec:
  replicas: 1
  selector:
    k8s-app: kube-dns
    version: v11
  template:
    metadata:
      labels:
        app: dns
        k8s-app: kube-dns
        kubernetes.io/cluster-service: "true"
        version: v11
    spec:
      containers:
      - args:
        - --data-dir=/var/etcd/data
        - --name=etcd0
        - --listen-client-urls=http://0.0.0.0:2379,http://0.0.0.0:4001
        - --advertise-client-urls=http://127.0.0.1:2379,http://127.0.0.1:4001
        - --initial-cluster-token=skydns-etcd
        image: quay.io/coreos/etcd:v2.3.3
        name: etcd
        resources:
          limits:
            cpu: 100m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 50Mi
        volumeMounts:
        - mountPath: /var/etcd/data
          name: etcd-storage
      - args:
        - --domain=cluster.local
        image: gcr.io/google_containers/kube2sky-amd64:1.15
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: kube2sky
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 50Mi
      - args:
        - -machines=http://127.0.0.1:4001
        - -addr=0.0.0.0:53
        - -ns-rotate=false
        - -domain=cluster.local.
        image: gcr.io/google_containers/skydns-amd64:1.0
        name: skydns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 50Mi
      - args:
        - -cmd=nslookup kubernetes.default.svc.cluster.local 127.0.0.1 >/dev/null
        - -port=8080
        image: gcr.io/google_containers/exechealthz-amd64:1.0
        name: healthz
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
      dnsPolicy: Default
      nodeSelector:
        role: worker
      volumes:
      - emptyDir: {}
        name: etcd-storage
